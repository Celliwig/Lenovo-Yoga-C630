###################################################################################################################################################
# Paths
###################################################################################################################################################
CWD=$PWD
DIR_INITRD="${CWD}/initrd"
DIR_MAKEJAIL="${CWD}/makejail"
DIR_EXTRAS="${CWD}/extras"
DIR_USBKEY="${CWD}/usb_key"
DIR_USBKEY_BOOT="${DIR_USBKEY}/boot"

###################################################################################################################################################
# Defines
###################################################################################################################################################
TXT_UNDERLINE="\033[1m\033[4m"
TXT_NORMAL="\033[0m"

###################################################################################################################################################
# Functions
###################################################################################################################################################
okay_failedexit () {
	if [ $1 -eq 0 ]; then
		echo "Okay"
	else
		echo "Failed"
		exit
	fi
}

identify_package_type () {
	file -0 -F "" "${1}" |awk -F "\0" 'BEGIN {RTN="unknown"}; /Debian binary package/ {RTN="debian"}; /RPM/ {RTN="redhat"}; END {print RTN}'
}

# DEB
###################################################################################################################################################
deb_package_extract () {
	local kernel_package="${1}"
	local extract_dir="${2}"
	sudo dpkg -x "${kernel_package}" "${extract_dir}" &> /dev/null
	return $?
}

# RPM
###################################################################################################################################################
rpm_package_extract () {
	local cwd="${PWD}"
	local extract_dir="${2}"
	local kernel_package=`realpath "${1}"`
	if [ $? -ne 0 ]; then
		return $?
	fi
	local tmp_dir=`mktemp -d`
	if [ $? -ne 0 ]; then
		return $?
	fi
	cd "${tmp_dir}" &> /dev/null
	if [ $? -ne 0 ]; then
		return $?
	fi
	rpm2cpio "${kernel_package}" |sudo cpio -idm &> /dev/null
	retval=$?
	cd "${cwd}"
	if [ "${retval}" -ne 0 ]; then
		return "${retval}"
	fi
	sudo rsync -a "${tmp_dir}"/* "${extract_dir}" &> /dev/null
	retval=$?
# Check that this won't do something stupid
	if [[ "${tmp_dir}" =~ ^/tmp/tmp ]]; then
		sudo rm -rf "${tmp_dir}" &> /dev/null
	fi
	return "${retval}"
}
