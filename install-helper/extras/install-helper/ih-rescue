#!/bin/bash

ih_path=`dirname "${BASH_SOURCE[0]}"`
if [ -z "${ih_path}" ]; then
        ih_path="."
fi
. "${ih_path}"/ih-functions

ih_rescue_root() {
	ih_root_device=$1

#	mountroot
#	log_end_msg
#
#	if read_fstab_entry /usr; then
#		log_begin_msg "Mounting /usr file system"
#		mountfs /usr
#		log_end_msg
#	fi
#
#	# Mount cleanup
#	mount_bottom
#	nfs_bottom
#	local_bottom
#
#	maybe_break bottom
#	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/init-bottom"
#	# We expect udev's init-bottom script to move /dev to ${rootmnt}/dev
#	run_scripts /scripts/init-bottom
#	[ "$quiet" != "y" ] && log_end_msg
#
#	# Move /run to the root
#	mount -n -o move /run ${rootmnt}/run
#
#	validate_init() {
#		run-init -n "${rootmnt}" "${1}"
#	}
#
#	# Check init is really there
#	if ! validate_init "$init"; then
#		echo "Target filesystem doesn't have requested ${init}."
#		init=
#		for inittest in /sbin/init /etc/init /bin/init /bin/sh; do
#			if validate_init "${inittest}"; then
#				init="$inittest"
#				break
#			fi
#		done
#	fi
#
#	# No init on rootmount
#	if ! validate_init "${init}" ; then
#		panic "No init found. Try passing init= bootarg."
#	fi
#
#	maybe_break init
#
#	# don't leak too much of env - some init(8) don't clear it
#	# (keep init, rootmnt, drop_caps)
#	unset debug
#	unset MODPROBE_OPTIONS
#	unset DPKG_ARCH
#	unset ROOTFLAGS
#	unset ROOTFSTYPE
#	unset ROOTDELAY
#	unset ROOT
#	unset IP
#	unset IP6
#	unset VLAN
#	unset BOOT
#	unset BOOTIF
#	unset DEVICE
#	unset UBIMTD
#	unset blacklist
#	unset break
#	unset noresume
#	unset panic
#	unset quiet
#	unset readonly
#	unset resume
#	unset resume_offset
#	unset noresume
#	unset fastboot
#	unset forcefsck
#	unset fsckfix
#
#	# Move virtual filesystems over to the real filesystem
#	mount -n -o move /sys ${rootmnt}/sys
#	mount -n -o move /proc ${rootmnt}/proc
#
#	# Chain to real filesystem
#	# shellcheck disable=SC2086,SC2094
#	exec run-init ${drop_caps} "${rootmnt}" "${init}" "$@" <"${rootmnt}/dev/console" >"${rootmnt}/dev/console" 2>&1
#	echo "Something went badly wrong in the initramfs."
#	panic "Please file a bug on initramfs-tools."
}

ih_kernel_version=`uname -r`
ih_show_msg "System Rescue Utility.\n\nPlease select system root device.\n\nWARNING!!! A tmpfs will be mounted at:\n\n	/lib/modules/${ih_kernel_version}\n\nUnmount this if you intend installing the same version of the kernel on the rescued system!" 16 70

tmp_blockdevice_select=`ih_show_select_blockdevice`
ih_retval="${?}"
if [ "${ih_retval}" -eq 0 ]; then
	ih_rescue_root "${tmp_blockdevice_select}"
fi

