ih_rescue_umount_rootfsmnt() {
	ih_umount_nested ${rootmnt}
	ih_umount ${rootmnt}

	sleep 3
}

ih_rescue_root() {
	export ROOT="${1}"
	export ROOTDELAY=5
	. /scripts/functions

	maybe_break mount
	log_begin_msg "Mounting root file system"
	# Always load local and nfs (since these might be needed for /etc or
	# /usr, irrespective of the boot script used to mount the rootfs).
	. /scripts/local
	#. /scripts/nfs
	. /scripts/${BOOT}
	parse_numeric "${ROOT}"
	maybe_break mountroot
	mount_top
	mount_premount
	mountroot
	ih_rescue_mtrt_retval=${?}
	log_end_msg

	if [ ${ih_rescue_mtrt_retval} -eq 0 ]; then
		if read_fstab_entry /usr; then
			log_begin_msg "Mounting /usr file system"
			mountfs /usr
			log_end_msg
		fi

		# Mount cleanup
		mount_bottom
		#nfs_bottom
		local_bottom

		maybe_break bottom
		[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/init-bottom"
		# We expect udev's init-bottom script to move /dev to ${rootmnt}/dev
		run_scripts /scripts/init-bottom
		[ "$quiet" != "y" ] && log_end_msg

# Doesn't work
#		if [ ! -e "${rootmnt}/sbin/init" ]; then
#			ih_show_msg "Error, no init available on ${ROOT}." 6 70
#			ih_rescue_umount_rootfsmnt
#			return 1
#		fi

		return 0
	else
		ih_show_msg "Error mounting root device: ${ROOT}." 6 70
		return 1
	fi
}

ih_rescue() {
	ih_kernel_version=`uname -r`
	ih_show_msg "System Rescue Utility.\n\nPlease select system root device.\n\nWARNING!!! A tmpfs will be mounted at:\n\n	/lib/modules/${ih_kernel_version}\n\nUnmount this if you intend installing the same version of the kernel on the rescued system!" 16 70

	tmp_rootdevice_select=`ih_show_select_rootdevice`
	ih_retval="${?}"
	if [ "${ih_retval}" -eq 0 ]; then
		ih_rescue_root "${tmp_rootdevice_select}"
		return ${?}
	fi
	return 1
}
