#!/bin/bash
# $Id: setup-vars,v 1.3 2012/06/29 09:52:26 tom Exp $
# vile:shmode

# These symbols are defined to use in the sample shell scripts to make them
# more readable.  But they are (intentionally) not exported.  If they were
# exported, they would also be visible in the dialog program (a subprocess).

: ${DIALOG=dialog}

: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_HELP=2}
: ${DIALOG_EXTRA=3}
: ${DIALOG_ITEM_HELP=4}
: ${DIALOG_ESC=255}

: ${SIG_NONE=0}
: ${SIG_HUP=1}
: ${SIG_INT=2}
: ${SIG_QUIT=3}
: ${SIG_KILL=9}
: ${SIG_TERM=15}

ih_umount_all() {
	sync

	echo "Unmounting filesystems:"
	# First unmount any loop devices
	for tmp_loop_device in $(losetup --all|awk -F ':' '{print $1}'); do
		echo -n "	Umounting ${tmp_loop_device}: ";
		umount ${tmp_loop_device} &> /dev/null
		if [ ${?} -eq 0 ]; then
			echo "Okay"
		else
			echo "Failed"
		fi
	done

	# Destroy any loop devices
	for tmp_loop_device in $(losetup --all|awk -F ':' '{print $1}'); do
		echo -n "	Destroying ${tmp_loop_device}: ";
		losetup -d ${tmp_loop_device} &> /dev/null
		if [ ${?} -eq 0 ]; then
			echo "Okay"
		else
			echo "Failed"
		fi
	done

	# Unmount nested filesystems
	for mounted_fs in `mount |awk '/^\// {print $3}'`; do
		for nested_fsmount in `mount |awk "/\\\\${mounted_fs}/ {print \\$3}"|sort -r`; do
			if [[ "${mounted_fs}" != "${nested_fsmount}" ]]; then
				echo -n "	Unmounting ${nested_fsmount}: "
				umount ${nested_fsmount} &> /dev/null
				if [ ${?} -eq 0 ]; then
					echo "Okay"
				else
					echo "Failed"
				fi
			fi
		done
	done

	# Unmount filesystems
	for mounted_fs in `mount |awk '/^\// {print $1}'`; do
		echo -n "	Unmounting ${mounted_fs}: "
		umount ${mounted_fs} &> /dev/null
		if [ ${?} -eq 0 ]; then
			echo "Okay"
		else
			echo "Failed"
		fi
	done

	sleep 2
}

ih_show_msg() {
	local message="${1}"
	local rows="${2}"
	local columns="${3}"
	$DIALOG --stdout --title "install-helper" --msgbox "${message}" "${rows}" "${columns}"
}

ih_show_select_blockdevice() {
	while true; do
		tmp_dselect=`"${DIALOG}" --stdout --clear --title "Please choose a block device" "$@" --fselect /dev/ 14 48`
		retval="${?}"
		if [ "${retval}" -eq 0 ]; then
			local blockdevice_name=`basename "${tmp_dselect}"`
			if [ -e /sys/block/"${blockdevice_name}" ]; then
				echo "${tmp_dselect}"
				return 0
			else
				ih_show_msg "Error: Please select block device parent." 5 45
			fi
		else
			echo ''
			return "${retval}"
		fi
	done
}
