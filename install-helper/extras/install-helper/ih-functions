#!/bin/bash
# $Id: setup-vars,v 1.3 2012/06/29 09:52:26 tom Exp $
# vile:shmode

# These symbols are defined to use in the sample shell scripts to make them
# more readable.  But they are (intentionally) not exported.  If they were
# exported, they would also be visible in the dialog program (a subprocess).

: ${DIALOG=dialog}

: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_HELP=2}
: ${DIALOG_EXTRA=3}
: ${DIALOG_ITEM_HELP=4}
: ${DIALOG_ESC=255}

: ${SIG_NONE=0}
: ${SIG_HUP=1}
: ${SIG_INT=2}
: ${SIG_QUIT=3}
: ${SIG_KILL=9}
: ${SIG_TERM=15}

ih_umount() {
	local ih_fs_mount=${1}
	echo -n "	Unmounting ${ih_fs_mount}: "
	umount ${ih_fs_mount} &> /dev/null
	if [ ${?} -eq 0 ]; then
		echo "Okay"
	else
		echo "Failed"
	fi
}

ih_umount_nested() {
	local ih_fs_mount_check=${1}
	# Unmount nested filesystems
	for nested_fs_mount in `mount |awk "/\\\\${ih_fs_mount_check}/ {print \\$3}"|sort -r`; do
		if [[ "${ih_fs_mount_check}" != "${nested_fs_mount}" ]]; then
			ih_umount "${nested_fs_mount}"
		fi
	done
}

ih_umount_all() {
	sync

	echo "Unmounting filesystems:"
	# First unmount any loop devices
	for tmp_loop_device in $(losetup --all|awk -F ':' '{print $1}'); do
		ih_umount "${tmp_loop_device}"
	done

	# Destroy any loop devices
	for tmp_loop_device in $(losetup --all|awk -F ':' '{print $1}'); do
		echo -n "	Destroying ${tmp_loop_device}: ";
		losetup -d ${tmp_loop_device} &> /dev/null
		if [ ${?} -eq 0 ]; then
			echo "Okay"
		else
			echo "Failed"
		fi
	done

	# Unmount nested filesystems
	for mounted_fs in `mount |awk '/^\// {print $3}'`; do
		ih_umount_nested "${mounted_fs}"
	done

	# Unmount filesystems
	for mounted_fs in `mount |awk '/^\// {print $1}'`; do
		ih_umount "${mounted_fs}"
	done

	sleep 3
}

ih_show_msg() {
	local message="${1}"
	local rows="${2}"
	local columns="${3}"
	$DIALOG --stdout --title "install-helper" --msgbox "${message}" "${rows}" "${columns}"
}

ih_show_select_device() {
	tmp_dselect=`"${DIALOG}" --stdout --clear "$@" --fselect /dev/ 14 48`
	retval="${?}"
	if [ "${retval}" -eq 0 ]; then
		echo "${tmp_dselect}"
		return 0
	else
		echo ''
		return "${retval}"
	fi
}

ih_show_select_blockdevice() {
	while true; do
		tmp_dselect=`ih_show_select_device --title "Please choose a block device."`
		retval="${?}"
		if [ "${retval}" -eq 0 ]; then
			local blockdevice_name=`basename "${tmp_dselect}"`
			if [ -e /sys/block/"${blockdevice_name}" ]; then
				echo "${tmp_dselect}"
				return 0
			else
				ih_show_msg "Error: Please select a block device." 5 45
			fi
		else
			echo ''
			return "${retval}"
		fi
	done
}

ih_show_select_rootdevice() {
	while true; do
		tmp_dselect=`ih_show_select_device --title "Please choose a partition."`
		retval="${?}"
		if [ "${retval}" -eq 0 ]; then
			local rootdevice_name=`realpath "${tmp_dselect}"`
			local rootdevice_rslt=`blkid -o device|grep -c "^${rootdevice_name}\$"`
			if [ ${rootdevice_rslt} -eq 1 ]; then
				echo "${tmp_dselect}"
				return 0
			else
				ih_show_msg "Error: Please select root device." 5 45
			fi
		else
			echo ''
			return "${retval}"
		fi
	done
}

ih_show_select_images() {
	while true; do
		tmp_dselect=`"${DIALOG}" --stdout --clear --title "Please choose an install image." "$@" --fselect /media/images 14 48`
		retval="${?}"
		if [ "${retval}" -eq 0 ]; then
			local image_filename="${tmp_dselect}"
			if [ -f "${image_filename}" ]; then
				echo "${image_filename}"
				return 0
			else
				ih_show_msg "Error: ${image_filename} is not a file." 5 45
			fi
		else
			echo ''
			return "${retval}"
		fi
	done
}
