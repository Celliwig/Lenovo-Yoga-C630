diff -Naur Lenovo-Yoga-c630-kernel/drivers/soundwire/bus.c Linaro-linux/drivers/soundwire/bus.c
--- Lenovo-Yoga-c630-kernel/drivers/soundwire/bus.c	2019-10-27 17:19:19.000000000 +0000
+++ Linaro-linux/drivers/soundwire/bus.c	2019-11-01 20:18:39.655068914 +0000
@@ -334,9 +334,11 @@
 	if (ret < 0)
 		return ret;
 
-	ret = pm_runtime_get_sync(slave->bus->dev);
-	if (ret < 0)
-		return ret;
+	if (pm_runtime_enabled(slave->bus->dev)) {
+		ret = pm_runtime_get_sync(slave->bus->dev);
+		if (ret < 0)
+			return ret;
+	}
 
 	ret = sdw_transfer(slave->bus, &msg);
 	pm_runtime_put(slave->bus->dev);
@@ -362,9 +364,11 @@
 	if (ret < 0)
 		return ret;
 
-	ret = pm_runtime_get_sync(slave->bus->dev);
-	if (ret < 0)
-		return ret;
+	if (pm_runtime_enabled(slave->bus->dev)) {
+		ret = pm_runtime_get_sync(slave->bus->dev);
+		if (ret < 0)
+			return ret;
+	}
 
 	ret = sdw_transfer(slave->bus, &msg);
 	pm_runtime_put(slave->bus->dev);
@@ -610,7 +614,7 @@
 	u32 addr;
 	int ret;
 	u8 val = 0;
-
+return 0; //HACK to not setup interrupts
 	addr = SDW_DPN_INTMASK(port);
 
 	/* Set/Clear port ready interrupt mask */
@@ -635,7 +639,7 @@
 	struct sdw_slave_prop *prop = &slave->prop;
 	int ret;
 	u8 val;
-
+return 0; //HACK to not setup interrupts
 	/*
 	 * Set bus clash, parity and SCP implementation
 	 * defined interrupt mask
diff -Naur Lenovo-Yoga-c630-kernel/drivers/soundwire/stream.c Linaro-linux/drivers/soundwire/stream.c
--- Lenovo-Yoga-c630-kernel/drivers/soundwire/stream.c	2019-10-27 17:19:19.000000000 +0000
+++ Linaro-linux/drivers/soundwire/stream.c	2019-11-01 20:18:39.659070048 +0000
@@ -155,6 +155,8 @@
 		addr6 = SDW_DPN_LANECTRL_B0(t_params->port_num);
 	}
 
+#if 0
+	//Do not program these for SDW_STREAM_PDM type
 	/* Program DPN_PortCtrl register */
 	wbuf = p_params->data_mode << SDW_REG_SHIFT(SDW_DPN_PORTCTRL_DATAMODE);
 	wbuf |= p_params->flow_mode;
@@ -176,6 +178,7 @@
 		return ret;
 	}
 
+#endif
 	/* Program DPN_SampleCtrl1 register */
 	wbuf = (t_params->sample_interval - 1) & SDW_DPN_SAMPLECTRL_LOW;
 	ret = sdw_write(s_rt->slave, addr3, wbuf);
@@ -689,9 +692,12 @@
 	}
 
 	if (!multi_link) {
-		kfree(wr_msg);
-		kfree(wbuf);
-		bus->defer_msg.msg = NULL;
+		if (bus->defer_msg.msg) {
+			kfree(bus->defer_msg.msg->buf);
+			kfree(bus->defer_msg.msg);
+			bus->defer_msg.msg = NULL;
+		}
+
 		bus->params.curr_bank = !bus->params.curr_bank;
 		bus->params.next_bank = !bus->params.next_bank;
 	}
@@ -701,7 +707,11 @@
 error:
 	kfree(wbuf);
 error_1:
-	kfree(wr_msg);
+	if (bus->defer_msg.msg) {
+		kfree(bus->defer_msg.msg);
+		bus->defer_msg.msg = NULL;
+	}
+
 	return ret;
 }
 
@@ -734,6 +744,7 @@
 	if (bus->defer_msg.msg) {
 		kfree(bus->defer_msg.msg->buf);
 		kfree(bus->defer_msg.msg);
+		bus->defer_msg.msg = NULL;
 	}
 
 	return 0;
@@ -825,9 +836,11 @@
 error:
 	list_for_each_entry(m_rt, &stream->master_list, stream_node) {
 		bus = m_rt->bus;
-
-		kfree(bus->defer_msg.msg->buf);
-		kfree(bus->defer_msg.msg);
+		if (bus->defer_msg.msg) {
+			kfree(bus->defer_msg.msg->buf);
+			kfree(bus->defer_msg.msg);
+			bus->defer_msg.msg = NULL;
+		}
 	}
 
 msg_unlock:
